\title{Generic OIDC auth}{generic-oidc-auth}

\use-plugin{concourse-docs}
\omit-children-from-table-of-contents

A Concourse server can authenticate against any valid OIDC auth provider. This
provider is similar to \reference{generic-oauth} except it only requires an
issuer URL rather than auth/token/userinfo URLs.

\section{
  \title{Authentication}{generic-oidc-authentication}

  First you'll need to create a client with your oAuth provider.

  The callback URL must be the URL of your Concourse server
  with \code{/sky/issuer/callback} appended. This address must be reachable by
  your OIDC provider - it can't be \code{localhost}.

  For example, Concourse's own CI server's callback URL would be:

  \codeblock{bash}{{{
  https://ci.concourse-ci.org/sky/issuer/callback
  }}}

  A typical \reference{web-node} env config may look something like this:

  \codeblock{bash}{{{
  CONCOURSE_OIDC_DISPLAY_NAME=Acme
  CONCOURSE_OIDC_CLIENT_ID=myclientid
  CONCOURSE_OIDC_CLIENT_SECRET=myclientsecret
  CONCOURSE_OIDC_ISSUER=https://oidc.example.com
  }}}

  Consult \code{concourse web --help} for a full list of flags with
  descriptions.

  \section{
    \title{A note about user lookup}

    When determining the user identity, Concourse will first look at the
    \code{preferred_username} claim. If this claim is empty or missing, it will
    then look at the claim specified by \code{CONCOURSE_OIDC_USER_NAME_KEY}
    (which defaults to \code{username}).

    Let's say that you want to tie each user to their email by using
    \code{CONCOURSE_OIDC_USER_NAME_KEY=email}.

    If your OIDC provider returns the following claims, Concourse will still
    resolve the user to \code{Jane Doe}:
    \codeblock{json}{{{
    {
     "sub": "248289761001",
     "username": "j.doe",
     "preferred_username": "Jane Doe",
     "email": "janedoe@example.com",
    }
    }}}

    However, if the \code{preferred_username} claim is empty or missing,
    Concourse will respect the key and resolve the user to
    \code{janedoe@example.com}:
    \codeblock{json}{{{
    {
     "sub": "248289761001",
     "username": "j.doe",
     "preferred_username": "",
     "email": "janedoe@example.com",
    }
    }}}
  }
}

\section{
  \title{Authorization}{generic-oidc-authorization}

  \warn{When authorizing individual users, it's up to you to ensure that the
  \code{preferred_username} claim and/or the claim specified by
  \code{CONCOURSE_OIDC_USER_NAME_KEY} is unique. If they're not, then it's
  possible for users to impersonate each other}

  OIDC users and groups can be authorized for a team by passing one or more
  of the following flags to \reference{fly-set-team}:

  \definitions{
    \definition{\code{--oidc-user=USERNAME}}{
      Authorize an individual user.
    }
  }{
    \definition{\code{--oidc-group=GROUP_NAME}}{
      Authorize anyone from the group.

      You may only configure groups if the auth provider exposes this
      information in either the token itself, or in the contents of the
      userinfo endpoint.

      You can configure which claim points to the groups information by
      specifying \code{CONCOURSE_OIDC_GROUPS_KEY} on the \reference{web-node}.
    }
  }

  For example:

  \codeblock{bash}{{{
  $ fly set-team -n my-team \
      --oidc-user my-username \
      --oidc-user another-username \
      --oidc-group my-group \
      --oidc-group my-other-group
  }}}

  ...or via \code{--config} for \reference{setting-roles}{setting user roles}:

  \codeblock{bash}{{{
  roles:
  - name: member
    oidc:
      users: ["my-username", "another-username"]
      groups: ["my-group", "my-other-group"]
  }}}

  Both users and groups are optional. You may opt to only provide privileges
  based on membership to a group and not to any user explicitly and vice versa.

  \section{
    \title{Configuring \code{main} Team Authorization}

    OIDC users and groups can be added to the \reference{main-team}
    authorization config by setting the following env on the
    \reference{web-node}:

    \codeblock{bash}{{{
    CONCOURSE_MAIN_TEAM_OIDC_USER=my-user
    CONCOURSE_MAIN_TEAM_OIDC_GROUP=my-group
    }}}

    Multiple users and groups may be specified by comma-separating them.
  }
}
